#!/usr/bin/env bash

# =============================================================================
# KARRIO DEVELOPMENT SERVER STARTER
# =============================================================================
# Starts the complete Karrio development environment:
# - Karrio API server
# - Karrio Dashboard
# =============================================================================

set -e

# Get script directory
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
ROOT_DIR="$( cd "$SCRIPT_DIR/.." && pwd )"

# Change to root directory
cd "$ROOT_DIR"

# Color codes for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# Utility functions
print_step() { echo -e "${CYAN}→ $1${NC}"; }
print_success() { echo -e "${GREEN}✓ $1${NC}"; }
print_warning() { echo -e "${YELLOW}⚠ $1${NC}"; }
print_error() { echo -e "${RED}✗ $1${NC}"; }
command_exists() { command -v "$1" >/dev/null 2>&1; }

# Header
echo -e "${BLUE}"
echo "██╗  ██╗ █████╗ ██████╗ ██████╗ ██╗ ██████╗ "
echo "██║ ██╔╝██╔══██╗██╔══██╗██╔══██╗██║██╔═══██╗"
echo "█████╔╝ ███████║██████╔╝██████╔╝██║██║   ██║"
echo "██╔═██╗ ██╔══██║██╔══██╗██╔══██╗██║██║   ██║"
echo "██║  ██╗██║  ██║██║  ██║██║  ██║██║╚██████╔╝"
echo "╚═╝  ╚═╝╚═╝  ╚═╝╚═╝  ╚═╝╚═╝  ╚═╝╚═╝ ╚═════╝ "
echo -e "${NC}"
echo "Starting Development Environment"
echo ""

# =============================================================================
# PREREQUISITE CHECKS
# =============================================================================
print_step "Checking prerequisites..."

# Check Python virtual environment
if [[ ! -d ".venv/karrio" ]]; then
    print_error "Python virtual environment not found. Please run ./bin/setup-dev-env first"
    exit 1
fi

# Check Node.js dependencies
if [[ ! -d "node_modules" ]]; then
    print_warning "Node.js dependencies not found. Running npm install..."
    npm install
fi

print_success "All prerequisites satisfied"

# =============================================================================
# CLEANUP FUNCTION
# =============================================================================
cleanup() {
    echo ""
    echo "Shutting down development environment..."

    # Kill all child processes
    pkill -P $$ 2>/dev/null || true

    # Kill specific processes by port
    for port in 5002 3002; do
        # macOS doesn't have xargs -r, so we handle it differently
        pids=$(lsof -ti :$port 2>/dev/null || true)
        if [[ -n "$pids" ]]; then
            echo "$pids" | xargs kill 2>/dev/null || true
        fi
    done

    # Additional cleanup for common processes
    pkill -f "karrio runserver" 2>/dev/null || true
    pkill -f "npm.*@karrio/dashboard" 2>/dev/null || true

    echo "Development environment stopped"
    exit 0
}

# Trap signals to ensure cleanup
trap cleanup SIGINT SIGTERM EXIT

# =============================================================================
# START SERVICES
# =============================================================================

# Start API server
print_step "Starting Karrio API server..."

# Activate virtual environment and start server in subshell
(
    source bin/activate-env
    if [[ -f "bin/start-server" ]]; then
        ./bin/start-server
    else
        karrio runserver
    fi
) &
SERVER_PID=$!
sleep 3

# Start Dashboard
print_step "Starting Karrio Dashboard..."
npm run dev -w @karrio/dashboard &
DASHBOARD_PID=$!
sleep 3

# =============================================================================
# SHOW ACCESS INFO
# =============================================================================
echo ""
print_success "Development environment started! 🚀"
echo ""
echo -e "${GREEN}Access your application:${NC}"
echo "   → API: http://localhost:5002"
echo "   → Dashboard: http://localhost:3002"
echo "   → Admin: http://localhost:5002/admin"
echo ""
echo -e "${CYAN}Press Ctrl+C to stop all services${NC}"
echo ""

# Wait for user to stop
wait
