# OpenTelemetry configuration with Prometheus for metrics collection
# This file provides a setup for OpenTelemetry with Prometheus as the metrics backend
# To use: docker-compose -f docker-compose.yml -f docker-compose.prometheus.yml up

services:
  # Prometheus for metrics collection and storage
  prometheus:
    container_name: karrio.prometheus
    image: prom/prometheus:latest
    restart: unless-stopped
    ports:
      - "9090:9090"  # Prometheus UI
    volumes:
      - prometheus-data:/prometheus
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--storage.tsdb.retention.time=200h"
      - "--web.enable-lifecycle"
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # OpenTelemetry Collector to receive telemetry and export to Prometheus
  otel-collector:
    container_name: karrio.otel-collector
    image: otel/opentelemetry-collector-contrib:latest
    restart: unless-stopped
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel-collector-prometheus.yaml:/etc/otel-collector-config.yaml:ro
    ports:
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP HTTP receiver
      - "8888:8888"   # Internal collector metrics
      - "8889:8889"   # Prometheus exporter metrics
    depends_on:
      - prometheus
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8888/metrics"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Override api service to enable OpenTelemetry with metrics
  api:
    environment:
      OTEL_ENABLED: "true"
      OTEL_SERVICE_NAME: "karrio-api"
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://otel-collector:4317"
      OTEL_EXPORTER_OTLP_PROTOCOL: "grpc"
      OTEL_ENVIRONMENT: "development"
      OTEL_RESOURCE_ATTRIBUTES: "deployment.environment=docker,service.namespace=karrio"

  # Override worker service to enable OpenTelemetry with metrics
  worker:
    environment:
      OTEL_ENABLED: "true"
      OTEL_SERVICE_NAME: "karrio-worker"
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://otel-collector:4317"
      OTEL_EXPORTER_OTLP_PROTOCOL: "grpc"
      OTEL_ENVIRONMENT: "development"
      OTEL_RESOURCE_ATTRIBUTES: "deployment.environment=docker,service.namespace=karrio"

volumes:
  prometheus-data: