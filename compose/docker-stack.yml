version: "3.8"

networks:
  fulexo-network:
    driver: overlay

volumes:
  pgdata:
  valkeydata:
  miniodata:

services:
  nginx:
    image: nginx:1.25
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - /etc/letsencrypt:/etc/letsencrypt:ro
    environment:
      - DOMAIN_API=${DOMAIN_API}
      - DOMAIN_APP=${DOMAIN_APP}
    command: >
      sh -c "
        API_HOST=$(printf '%s' \"$DOMAIN_API\" | sed -E 's#^https?://##; s#/.*$##') && \
        APP_HOST=$(printf '%s' \"$DOMAIN_APP\" | sed -E 's#^https?://##; s#/.*$##') && \
        export API_HOST APP_HOST && \
        envsubst '$$API_HOST $$APP_HOST' < /etc/nginx/conf.d/app.conf.template > /etc/nginx/conf.d/app.conf && \
        nginx -g 'daemon off;'
      "
    depends_on:
      - api
      - web
    networks:
      - fulexo-network

  postgres:
    image: postgres:16
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - fulexo-network
    deploy:
      placement:
        constraints: [node.role == manager]

  valkey:
    image: valkey/valkey:7
    command: ["valkey-server", "--appendonly", "yes"]
    volumes:
      - valkeydata:/data
    networks:
      - fulexo-network

  minio:
    image: minio/minio:latest
    environment:
      MINIO_ROOT_USER: ${S3_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${S3_SECRET_KEY}
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - miniodata:/data
    networks:
      - fulexo-network

  api:
    image: fulexo/api:latest
    build:
      context: ..
      dockerfile: apps/api/Dockerfile
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      REDIS_URL: ${REDIS_URL}
      S3_ENDPOINT: ${S3_ENDPOINT}
      S3_ACCESS_KEY: ${S3_ACCESS_KEY}
      S3_SECRET_KEY: ${S3_SECRET_KEY}
      S3_BUCKET: ${S3_BUCKET}
      JWT_SECRET: ${JWT_SECRET}
      ENCRYPTION_KEY: ${ENCRYPTION_KEY}
      MASTER_KEY_HEX: ${MASTER_KEY_HEX}
      DOMAIN_API: ${DOMAIN_API}
      DOMAIN_APP: ${DOMAIN_APP}
      NEXT_PUBLIC_API_BASE: ${NEXT_PUBLIC_API_BASE}
      NEXT_PUBLIC_APP_URL: ${NEXT_PUBLIC_APP_URL}
      FRONTEND_URL: ${FRONTEND_URL}
      WEB_URL: ${WEB_URL}
      NODE_ENV: ${NODE_ENV}
      KARRIO_API_URL: http://karrio-server:5002
      FULEXO_TO_KARRIO_API_TOKEN: ${FULEXO_TO_KARRIO_API_TOKEN}
      FULEXO_INTERNAL_API_TOKEN: ${FULEXO_INTERNAL_API_TOKEN}
    networks:
      - fulexo-network
    deploy:
      restart_policy:
        condition: on-failure

  web:
    image: fulexo/web:latest
    build:
      context: ..
      dockerfile: apps/web/Dockerfile
    environment:
      NODE_ENV: ${NODE_ENV}
      BACKEND_API_BASE: ${BACKEND_API_BASE}
      NEXT_PUBLIC_API_BASE: ${NEXT_PUBLIC_API_BASE}
      NEXT_PUBLIC_APP_URL: ${NEXT_PUBLIC_APP_URL}
      FRONTEND_URL: ${FRONTEND_URL}
      WEB_URL: ${WEB_URL}
      SHARE_BASE_URL: ${SHARE_BASE_URL}
      DOMAIN_API: ${DOMAIN_API}
      DOMAIN_APP: ${DOMAIN_APP}
    networks:
      - fulexo-network

  worker:
    image: fulexo/worker:latest
    build:
      context: ..
      dockerfile: apps/worker/Dockerfile
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      REDIS_URL: ${REDIS_URL}
      NODE_ENV: ${NODE_ENV}
      FULEXO_API_URL: http://api:3000
      KARRIO_API_URL: http://karrio-server:5002
      FULEXO_TO_KARRIO_API_TOKEN: ${FULEXO_TO_KARRIO_API_TOKEN}
      FULEXO_INTERNAL_API_TOKEN: ${FULEXO_INTERNAL_API_TOKEN}
    networks:
      - fulexo-network
