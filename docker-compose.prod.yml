version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: fulexo-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: fulexo
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-Fulexo123!}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d fulexo"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - fulexo-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: fulexo-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - fulexo-network

  # API Backend
  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
      target: production
    container_name: fulexo-api
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://postgres:${POSTGRES_PASSWORD:-Fulexo123!}@postgres:5432/fulexo
      REDIS_URL: redis://redis:6379/0
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-here}
      ENCRYPTION_KEY: ${ENCRYPTION_KEY:-your-32-character-encryption-key}
      SHARE_TOKEN_SECRET: ${SHARE_TOKEN_SECRET:-your-share-token-secret}
      LOG_LEVEL: ${LOG_LEVEL:-info}
      KARRIO_API_URL: http://karrio-server:5002
      FULEXO_TO_KARRIO_API_TOKEN: ${FULEXO_TO_KARRIO_API_TOKEN:-}
      FULEXO_INTERNAL_API_TOKEN: ${FULEXO_INTERNAL_API_TOKEN:-}
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - fulexo-network
    volumes:
      - ./logs:/app/logs

  # Frontend Web App
  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
      target: production
    container_name: fulexo-web
    restart: unless-stopped
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_BASE: ${NEXT_PUBLIC_API_BASE:-http://localhost:3000}
      NEXT_PUBLIC_APP_URL: ${NEXT_PUBLIC_APP_URL:-http://localhost:3001}
      SHARE_BASE_URL: ${SHARE_BASE_URL:-http://localhost:3001}
    ports:
      - "3001:3000"
    depends_on:
      api:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - fulexo-network

  # Worker Service
  worker:
    build:
      context: .
      dockerfile: apps/worker/Dockerfile
      target: production
    container_name: fulexo-worker
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://postgres:${POSTGRES_PASSWORD:-Fulexo123!}@postgres:5432/fulexo
      REDIS_URL: redis://redis:6379/0
      WORKER_PORT: ${WORKER_PORT:-3002}
      LOG_LEVEL: ${LOG_LEVEL:-info}
      FULEXO_API_URL: http://api:3000
      KARRIO_API_URL: http://karrio-server:5002
      FULEXO_TO_KARRIO_API_TOKEN: ${FULEXO_TO_KARRIO_API_TOKEN:-}
      FULEXO_INTERNAL_API_TOKEN: ${FULEXO_INTERNAL_API_TOKEN:-}
    ports:
      - "3002:3002"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - fulexo-network
    volumes:
      - ./logs:/app/logs

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: fulexo-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - web
      - api
    networks:
      - fulexo-network
    environment:
      - DOMAIN_API=api.fulexo.com
      - DOMAIN_APP=panel.fulexo.com
      - DOMAIN_KARRIO_API=karrio.fulexo.com
      - DOMAIN_KARRIO_DASHBOARD=dashboard.karrio.fulexo.com

  karrio-db:
    image: postgres:13-alpine
    container_name: karrio-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${KARRIO_POSTGRES_USER:-karrio}
      POSTGRES_PASSWORD: ${KARRIO_POSTGRES_PASSWORD:-karrio}
      POSTGRES_DB: ${KARRIO_POSTGRES_DB:-karrio}
    volumes:
      - karrio_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - fulexo-network

  karrio-redis:
    image: redis:6.2-alpine
    container_name: karrio-redis
    restart: unless-stopped
    volumes:
      - karrio_redis_data:/data
    networks:
      - fulexo-network

  karrio-server:
    build:
      context: ./karrio
      dockerfile: ./docker/api/Dockerfile
    container_name: karrio-server
    restart: unless-stopped
    environment:
      SECRET_KEY: ${KARRIO_SECRET_KEY:-change-me}
      DATABASE_URL: postgres://${KARRIO_POSTGRES_USER:-karrio}:${KARRIO_POSTGRES_PASSWORD:-karrio}@karrio-db:5432/${KARRIO_POSTGRES_DB:-karrio}
      REDIS_URL: redis://karrio-redis:6379/1
      ADMIN_EMAIL: ${ADMIN_EMAIL:-admin@example.com}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD:-changeme}
      ALLOWED_HOSTS: ${KARRIO_ALLOWED_HOSTS:-localhost,127.0.0.1,karrio-server}
      CORS_ALLOWED_ORIGINS: ${KARRIO_CORS_ALLOWED_ORIGINS:-https://panel.fulexo.com,https://dashboard.karrio.fulexo.com}
      KARRIO_ADMIN_URL: https://dashboard.karrio.fulexo.com
      UPS_USERNAME: ${UPS_USERNAME:-}
      UPS_PASSWORD: ${UPS_PASSWORD:-}
      UPS_ACCESS_LICENSE_NUMBER: ${UPS_ACCESS_LICENSE_NUMBER:-}
    depends_on:
      karrio-db:
        condition: service_healthy
      karrio-redis:
        condition: service_started
    ports:
      - "5002:5002"
    networks:
      - fulexo-network

  karrio-dashboard:
    build:
      context: ./karrio
      dockerfile: ./docker/dashboard/Dockerfile
    container_name: karrio-dashboard
    restart: unless-stopped
    environment:
      NEXT_PUBLIC_KARRIO_PUBLIC_URL: https://karrio.fulexo.com
      KARRIO_URL: http://karrio-server:5002
    depends_on:
      - karrio-server
    ports:
      - "5001:3002"
    networks:
      - fulexo-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  nginx_logs:
    driver: local
  karrio_db_data:
    driver: local
  karrio_redis_data:
    driver: local

networks:
  fulexo-network:
    driver: bridge
